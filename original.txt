<?php
/*
Plugin Name: Organiza tus clientes
Plugin URI: http://www.facebook.com/peralta.federico.manuel
Description: Esta plugin va a ayudarte a organizar tus clientes a traves de tablas.
Version: 1.0
Author: Peralta Federico Manuel
Author URI: http://www.facebook.com/peralta.federico.manuel
License: GPL2
License URI: https://www.gnu.org/licenses/gpl-2.0.html
Text Domain: organiza-tus-clientes
*/

add_action('init', 'org_shortcode');
add_action('wp_ajax_nopriv_org_guardar_datos', 'org_guardar_datos'); //manejar ajax
add_action('wp_ajax_org_guardar_datos', 'org_guardar_datos'); //manejar ajax
//add_filter('manage_edit-org_usuarios_columns', 'org_usuarios_headers');
//add_filter('manage_org_usuarios_posts_custom_column', 'org_usuarios_columnas',1,2);
//add_action('admin_head-edit.php', 'org_register_custom_admin_titles');
add_action('wp_enqueue_scripts' , 'org_public_scripts');




//adheriendo una una funcion para lugar acceder a add_filter
//para cambiar el titulo de la tabla del plugin del admin panel
//function org_register_custom_admin_titles() {
//  add_filter('the_title', 'org_custom_admin_titles', 99, 2);
//}

//adheriendo shortcodes
function org_shortcode() {
  add_shortcode('org_formulario', 'org_formulario_shortcode');
}

function org_public_scripts() {
  wp_register_script('organizate-js',
                    plugins_url('/js/public/organizate.js', __FILE__),
                    array('jquery'),'', true);
  wp_register_style('organizate-css', plugins_url('/css/public/organizate.css', __FILE__));
  wp_enqueue_script('organizate-js');
  wp_enqueue_style('organizate-css');
}

/*function org_usuarios_headers( $columns ) {

  $columns = array(
    'cb' => '<input type="checkbox" />',
    'title' => __('Nombre del usuario'),
    'email' => __('Mail del usuario'),
  );

  //retornar cada columna (cb, titulo y email)
  return $columns;
}

//configurando las columnas del admin panel del plugin
function org_usuarios_columnas( $column, $post_id) {

  //retonar el texto
  $output = '';

  switch ( $column ) {

    case 'email':
      // obtener el mail desde el formulario completando
      $email = get_field('org_email', $post_id );
      $output .= $email;
      break;

  }

  //echo texto
  echo $output;
}

//configurando el nombre del usuario en el admin panel del plugin
function org_custom_admin_titles( $title, $post_id) {

  global $post;

  $output = $title;

  if ( isset($post->post_type) ) :

    switch ($post->post_type) {
      case 'org_usuarios':
        $fname = get_field('org_nombre', $post_id);
        $output = $fname;
        break;
    }
  endif;

  return $output;
}
*/

function org_formulario_shortcode($args, $content) {
  echo "<script>console.log('org_formulario_shortcode funcionando')</script>";
  $output = '

  <div class="slb">

    <form id="org_form" name="org_form_sorete" class="slb-form" method="post"
    action="/wordpress/wp-admin/admin-ajax.php?action=org_guardar_datos">


      <p>
      <label>Nombre completo</label></br>
      <input type="text" name="org_nombre" placeholder="Tsu ndombre" />
      </p>

      <p>
      <label>Email</label><br />
      <input type="text" name="org_email" placeholder="tu@email.com" />
      </p>

      <p class="slb-input-container">
      <input type="submit" name="org_submit" value="Inscribite" />
      </p>

    </form>

    </div>';

  return $output;
}

//chequeamos por errorees y guardamos los datos del usuario
function org_guardar_datos () {

  echo "<script>console.log('org_guardar_datos funcionando')</script>";

  $result = array(
    'status' => 0,
    'message' => 'La suscripcion no pudo ser realizada.',
    'error'=> '',
    'errors'=> array()
  );

  /*$resultados = array(
    'estado' => 0,
    'mensaje' => 'No se pudo inscribir',
    'error' => '',
    'errores' => array()
  );

  try {

  /*$datos = array(
    'nombre' => esc_attr($_POST['org_nombre']),
    'email' => esc_attr($_POST['org_email'])
  );

  $errores = array();

  if (!strlen($datos['nombre']))
    $errores['nombre'] = "El nombre es requerido";
  if (!strlen($datos['email']))
    $errores['email'] = "El email es requerido";
  if (strlen($datos['nombre']) && !is_email($datos['email']))
    $errores['email'] = "El email debe ser valido";

  if(count($errores)):

    $resultados['error'] = "Se encontraron errores en el formulario";
    $resultados['errores'] = $errores;

  else

    $resultados['estado'] = 1;
    $resultados['mensaje'] = "Inscripcion correcta";
    //org_inscribir_usuario($datos);

  endif;
  }

  catch ( Exception $e ) {


  }
*/
  //org_json($result);
  org_json($result); #funcion mas abajo
}
/*
//inscribimos al usuario
function org_inscribir_usuario($datos) {
echo "<script>console.log('org_inscribir_usuario funcionando')</script>";
  $id_usuario = 0;

  try {

    $id_usuario = org_obtener_id_usuario($datos['email']);

    if(!$id_usuario):
      $id_usuario = wp_insert_post(
        array(
          'post_type' => 'org_usuarios',
          'post_title' =>  $datos['nombre'],
          'post_status' => 'publish',
        ),
        true
      );
    endif;

    update_field(org_unico_codigo_acf('org_nombre'), $datos['nombre'], $id_usuario);
    update_field(org_unico_codigo_acf('org_email'), $datos['email'], $id_usuario);

  }
  catch (Exception $e) {

  }

  return $id_usuario;
}

//verificamos que otro usuario no tenga el mismo mail antes de inscribir
function org_obtener_id_usuario($email){

  $id_usuario = 0;

  try {

    $consulta_wp = new WP_Query(
      array(
        'post_type' => 'org_usuarios',
        'post_per-page' => 1,
        'meta_key' => 'org_email',
        'meta_query' => array(
          array(
            'key' => 'org_email',
            'value' => $email,
            'compare' => '=',
          ),
        ),
      )
    );

    if($consulta_wp->have_posts()):
      $consulta_wp->the_post();
      $consulta_wp = get_the_ID();

    endif;

  } catch (Exception $e){

  }

  wp_reset_query();

  return (int)$id_usuario;
}

function org_unico_codigo_acf($nombre_field){

  $key = $nombre_field;

  switch ($nombre_field) {
    case 'org_nombre':
      $key = 'field_5974007866ef5';
      break;
    case 'org_email':
      $key = 'field_5974009b66ef6';
      break;
  }

  return $key;
}
*/
function org_json($php_array) {

  //usar la funcion para transformar a json
  $json_result = json_encode( $php_array );

  //retornamos el resultado
  die( $json_result );

  //exit (?)
  exit;
}
?>
